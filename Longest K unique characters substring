//Given //a string you need to print the size of the longest possible substring that has exactly K unique characters. If there is no possible substring then print -1.




class Solution {
    public int longestkSubstr(String s, int k) {
        
        Map<Character,Integer> map=new HashMap<Character,Integer>();
        
        int i=-1;
        int j=-1;
        int max=-1;
        int len=-1;
        
        
        while(true)
        {
            boolean f1=false;
            boolean f2=false;
            while(i<s.length()-1)
            {  
                f1=true;

                i++;
                char ch=s.charAt(i);
                map.put(ch,map.getOrDefault(ch,0)+1);
                if(map.size()<k)
                {
                    continue;
                }
                else if(map.size()==k)
                {
                   len=i-j;

                    if(len>max)
                    {
                        max=len;
                    }
                }
                else 
                {
                    break;
                }

            }
            while(j<i)
            {
                f2=true;

                j++;
                    char ch=s.charAt(j);
                    if(map.get(ch)==1)
                    {
                        map.remove(ch);
                    }
                    else
                    {
                        map.put(ch,map.get(ch)-1);
                    }
                if(map.size()>k)
                {
                  continue;
                }
                else if(map.size()==k)
                {
                     len=i-j;
                    if(len>max)
                    {
                        max=len;
                    }
                    else
                    break;
                }


                
            }
        if(f1==false && f2==false)
            return max;

        }
    }
}

