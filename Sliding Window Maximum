//You are given an array of integers nums, there is a sliding window of size k which is moving from the very left of the array to the very right. You can only see the k numbers in the window. Each time the sliding window moves right by one position.

//Return the max sliding window.


class Solution {
    public int[] maxSlidingWindow(int[] a, int k) {
        
        
        int n=a.length;
        
        Deque<Integer> q=new ArrayDeque<>();
        int res[]=new int[n-k+1];
        int l=0;
        
        for(int i=0;i<n;i++)
        {
            if(!q.isEmpty() && q.peek()==i-k)
            {
                q.poll();
            }
            
            while(!q.isEmpty() && a[q.peekLast()]<=a[i])
            {
                q.pollLast();
            }
            q.offer(i);
            if(i>=k-1)
            {
                res[l++]=a[q.peek()];
            }
        }
        
        return res;
    }
}
